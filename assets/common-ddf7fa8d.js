import{j as e}from"./jsx-runtime-ffb262ed.js";const n=e.jsx("thead",{children:e.jsxs("tr",{children:[e.jsx("th",{children:"Property"}),e.jsx("th",{children:"Description"}),e.jsx("th",{children:"Required"})]})}),t=e.jsxs("tr",{children:[e.jsx("td",{children:e.jsx("code",{children:"property"})}),e.jsx("td",{children:"The path to where the value for this node is stored in the data object. Uses dot notation for referencing a property of an object, letting you set values in nested objects."}),e.jsx("td",{children:"Yes"})]},"property"),s=e.jsxs("tr",{children:[e.jsx("td",{children:e.jsx("code",{children:"show"})}),e.jsxs("td",{children:["Logical expression deciding whether or not to show the node. Expressed using the ",e.jsx("a",{href:"/?selectedKind=DSL&selectedStory=Intro",children:"DSL"}),"."]}),e.jsx("td",{})]},"show"),i=e.jsxs("tr",{children:[e.jsx("td",{children:e.jsx("code",{children:"hide"})}),e.jsxs("td",{children:["Logical expression deciding whether or not to hide the node. Expressed using the ",e.jsx("a",{href:"/?selectedKind=DSL&selectedStory=Intro",children:"DSL"}),"."]}),e.jsx("td",{})]},"hide"),r=e.jsxs("tr",{children:[e.jsx("td",{children:e.jsx("code",{children:"heading"})}),e.jsx("td",{children:"The label for this node."}),e.jsx("td",{children:"Yes"})]},"heading"),o=e.jsxs("tr",{children:[e.jsx("td",{children:e.jsx("code",{children:"optional"})}),e.jsx("td",{children:"Mark input as optional. By default all fields are required."}),e.jsx("td",{})]},"optional"),l=e.jsxs("tr",{children:[e.jsx("td",{children:e.jsx("code",{children:"autocomplete"})}),e.jsxs("td",{children:["The autocomplete content attribute can be used to hint to the browser how to, or whether to, help the user fill forms in. For example prefilling the user's name, address or phone numbers based on earlier input. This is an accessibility requirement if there are relevant codes available. See UUtilsynet for ",e.jsx("a",{href:"https://www.uutilsynet.no/veiledning/135-identifiser-formal-med-inndata/1238",children:"documentation on available codes"}),". This field is optional."]}),e.jsx("td",{})]},"autocomplete"),h=[t,r],a=[e.jsxs("tr",{children:[e.jsx("td",{children:e.jsx("code",{children:"validator"})}),e.jsxs("td",{children:["An array of objects containing two properties: ",e.jsx("code",{children:"test"}),"; a logical expression that must evaluate to a true in order for the field to be available. If the test evaluates to a falsy value, the field will still show, but it will be disabled and a message will explain what prerequisites has not been met. The message is defined with the",e.jsx("code",{children:"error"})," property in the validator object."]}),e.jsx("td",{})]},"validator"),o,s,i];export{i as a,l as b,a as c,r as h,h as i,o,s,n as t};
